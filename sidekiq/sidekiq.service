
# systemd unit file for CentOS 7+, Ubuntu 15.04+
# Run:
#   - systemctl enable sidekiq
#   - systemctl {start,stop,restart,reload} sidekiq

[Unit]
Description=sidekiq
# consider adding redis-server.service if Redis is local and systemd-managed.
After=syslog.target network.target

[Service]
Type=simple
WorkingDirectory=/opt/myapp/current
# If you use rbenv:
# ExecStart=/bin/bash -lc '/home/deploy/.rbenv/shims/bundle exec sidekiq -e production'
# If you use the system's ruby:
#options: -q , -c 
ExecStart=/usr/local/bin/bundle exec sidekiq -e production

# use `systemctl reload sidekiq` to send the quiet signal to Sidekiq
# at the start of your deploy process.
ExecReload=/usr/bin/kill -TSTP $MAINPID

User=deploy
Group=deploy

# Greatly reduce Ruby memory fragmentation and heap usage
# https://www.mikeperham.com/2018/04/25/taming-rails-memory-bloat/
Environment=MALLOC_ARENA_MAX=2

# if we crash, restart
RestartSec=1
Restart=on-failure

# output goes to /var/log/syslog
StandardOutput=syslog
StandardError=syslog

# This will default to "bundler" if we don't specify it
SyslogIdentifier=sidekiq

[Install]
WantedBy=multi-user.target